===============================
 How to Use 2-matrix_divided.py
===============================

This library is very simple, since it only has one function called
``matrix_divided()``.

Numbers
=======

``matrix_divided()`` returns a new matrix where all value are divide by given number ``div``.  

::

    >>> matrix_divided =  __import__('2-matrix_divided').matrix_divided

    Now use it:

    >>> matrix = [[2, 4, 6], [8, 12, 16]]


    >>> matrix_divided(matrix, 2)
    [[1.0, 2.0, 3.0], [4.0, 6.0, 8.0]]

Result element are rounded to 2 decimal.

::

    >>> matrix_divided(matrix, 3)
    [[0.67, 1.33, 2.0], [2.67, 4.0, 5.33]]

Matrix is a list of lists of integers and div is 'inf'.

::

   
    >>> matrix_divided(matrix, float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Divide by zero
===========

Because it is forbidden to divide by zero

::
   
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

TypeError
===========

Matrix must be a list of integer or float

::

    >>> matrix = [[2, 4, 6], ["8", 12, 16]]

    >>> matrix_divided(matrix, 5)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats


Each row of the matrix must be of the same size

::

    >>> matrix = [[2, 6], [8, 12, 16]]

    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Div must be an integer

::

    >>> matrix_divided(matrix, "2")
    Traceback (most recent call last):
    TypeError: div must be a number

Only one argument

::

    >>> matrix_divided(matrix)
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'