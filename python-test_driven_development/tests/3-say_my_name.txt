===============================
 How to Use 3-say_my_name.py
===============================

This library is very simple, since it only has one function called
``say_my_name()``.

Strings
=======

``say_my_name()`` returns My name is <first name> <last name>.  

::

    >>> say_my_name =  __import__('3-say_my_name').say_my_name

    Now use it:

    >>> say_my_name("Ali", "Baba")
    My name is Ali Baba

Not Strings
=======

`if first_name and last_name are not string, function `say_my_name()`` raise a TypeError

::

    >>> say_my_name(123, "Baba")
    Traceback (most recent call last):
        File "./3-main.py", line 4, in <module>
        say_my_name(123, "Baba")
        File "/holbertonschool-higher_level_programming/python-test_driven_development/3-say_my_name.py", line 24, in say_my_name
        raise TypeError("first_name must be a string")
    TypeError: first_name must be a string

    >>> say_my_name("Ali", 2.8)
    Traceback (most recent call last):
        File "./3-main.py", line 4, in <module>
        say_my_name("Ali", 2.8)
        File "/holbertonschool-higher_level_programming/python-test_driven_development/3-say_my_name.py", line 26, in say_my_name
        raise TypeError("last_name must be a string")
    TypeError: last_name must be a string
